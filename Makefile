#
# Makefile created at Sun Apr 27 01:21:23 2003, by mmake
# altered by Kim Sun Apr 27
# 

# Programs (with common options):
SHELL		= /bin/sh
RM              = rm -f
MV              = mv -f
SED		= sed
XARGS		= xargs
CAT		= cat
FIND            = find
CPP		= cpp -C -P

INSTALL         = install
INSTALL_PROG    = $(INSTALL) -m $(MODE_PROGS)
INSTALL_FILE    = $(INSTALL) -m $(MODE_FILES)
INSTALL_DIR     = $(INSTALL) -m $(MODE_DIRS) -d

# Install modes 
MODE_PROGS      = 555
MODE_FILES      = 444
MODE_DIRS       = 2755

# Build programs
JAVAC           = javac
JAVADOC         = javadoc
JAR             = jar

# Build flags
JAVAC_FLAGS     = 
JAVADOC_FLAGS   = -version -author
JAR_FLAGS       = cvf

# ------------------------------------------------------------------- #

# Prefix for every install directory
PREFIX		= 

# The directory to install the jar file in. Set this to an empty value
#  if you dont want to install a jar file
JAR_DIR	        = $(PREFIX)usr/local/share/java

# The directory to install html files generated by javadoc
DOC_DIR         = $(PREFIX)doc

# The directory to install script files in
SCRIPT_DIR	= $(PREFIX)usr/local/bin

# ------------------------------------------------------------------- #

VERSION         = 0.6


# The name of the jar file to install
JAR_FILE        = struktor-$(VERSION).jar


# ------------------------------------------------------------------- #


# Packages we should compile
PACKAGES = \
	struktor.gui \
	struktor.strukelements \
	struktor.processor.functions \
	struktor.processor.operators \
	struktor.processor.datatypes \
	struktor \
	struktor.util \
	struktor.processor \



# ------------------------------------------------------------------- #

# A marker variable for the top level directory
TOPLEVEL	:= struktor

# Subdirectories with java files:
JAVA_DIRS	:= $(subst .,/,$(PACKAGES)) $(TOPLEVEL)

# All the .java source files:
JAVA_SRC	:= $(foreach dir, $(JAVA_DIRS), $(wildcard $(dir)/*.java))

# Dependency files:
DEPEND_OBJS	:= $(JAVA_SRC:.java=.u)

# Objects that should go into the jar file. (find syntax)
JAR_OBJS	:= \( -name '*.class' -o -name '*.gif' -o -name "*.au" \
		       -o -name '*.properties' \)

# The intermediate java files and main classes we should build:
JAVA_OBJS	:= $(JAVA_SRC:.java=.class)


# Escape inner class delimiter $
INSTALL_OBJS	:= $(subst $$,\$$,$(INSTALL_OBJS))

# ------------------------------------------------------------------- #


define check-exit
|| exit 1

endef


# -----------
# Build Rules
# -----------

%.class: %.java
	$(JAVAC) $(JAVAC_FLAGS) $<

%.jar: $(JAVA_OBJS) 
	 @echo "===> [Generating jar-file] "
	$(FIND) $(TOPLEVEL) $(JAR_OBJS) -print | $(XARGS) \
	$(JAR) $(JAR_FLAGS) $(JAR_FILE) 
	@echo "===> [Generating shell-wrapper] "
	echo "#!/bin/bash" > struktorstart
	echo "java -cp struktor-$(VERSION).jar:javacup_runtime.jar struktor.StruktorApplication" >> struktorstart
	chmod u+x struktorstart
	@echo "===> [Generating java-cup runtime jar] "
	$(JAR) $(JAR_FLAGS) javacup_runtime.jar java_cup/runtime/*.class
	
%.u: %.java
	$(JAVAC) $(JIKES_DEP_FLAG) $<


# -------
# Targets
# -------

.PHONY: all jar install uninstall doc clean depend tags

all::	$(JAVA_OBJS)


help:
	@echo "Usage: make {all|jar|install|uninstall|doc|clean}"


# Jar target
jar:  $(JAR_FILE) javacup_runtime.jar
install:: $(JAR_FILE) javacup_runtime.jar
	@echo "===> [Installing jar file, $(JAR_FILE) in $(JAR_DIR)] "
	$(INSTALL_DIR) $(JAR_DIR) $(check-exit)
	$(INSTALL_FILE) $(JAR_FILE) $(JAR_DIR) $(check-exit)
	@echo "===> [Installing javacup_runtime jar file in $(JAR_DIR)] "
	$(INSTALL_FILE) javacup_runtime.jar $(JAR_DIR) $(check-exit)
uninstall::
	@echo "===> [Removing jar file, $(JAR_FILE) from $(JAR_DIR)] "
	$(RM) $(JAR_DIR)/$(JAR_FILE)  $(check-exit)
	@echo "===> [Removing javacup_runtime jar file from $(JAR_DIR)] "
	$(RM) $(JAR_DIR)/javacup_runtime.jar $(check-exit)
clean::
	$(RM) $(JAR_FILE)
	$(RM) struktorstart
	$(RM) javacup_runtime.jar




# Doc target
doc:	$(JAVA_SRC)
	@echo "===> [Generating java documentation in doc] "
	if [ ! -d doc ]; then mkdir doc; fi
	$(JAVADOC) -d doc $(JAVADOC_FLAGS) $(PACKAGES)
clean::
	$(RM) -r doc



# Script target
all::	 $(SCRIPT_OBJS)
install:: $(SCRIPT_OBJS)
	@echo "===> [Generating shell-script] "
	echo "#!/bin/bash" > struktor
	echo "java -cp $(JAR_DIR)/$(JAR-FILE).jar:javacup_runtime.jar struktor.StruktorApplication" >>  struktor
	@echo "===> [Installing shell-scripts in $(SCRIPT_DIR)] "
	$(INSTALL_DIR) $(check-exit)
	$(INSTALL_PROG) struktor $(SCRIPT_DIR) $(check-exit))
	rm struktor
uninstall:: 
	@echo "===> [Removing shell-scripts from $(SCRIPT_DIR)] "
	$(RM) $(SCRIPT_DIR)/struktor $(check-exit))
clean::
	rm -f $(SCRIPT_OBJS)



# Various cleanup routines
clean::
	$(FIND) . \( -name '*~' -o -name '*.class' \) -print | \
	$(XARGS) $(RM) 
	$(FIND) . -name '*.u' -print | $(XARGS) $(RM)
